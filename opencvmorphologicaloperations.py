# -*- coding: utf-8 -*-
"""OpenCVMorphologicalOperations.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1H2jSML5B2_fVsIvIQiXpQQ5XGF_MU-w7

# **OpenCVMorphologicalOperations**

# **Step 1: Erosion and Dilation**
"""

import cv2
import numpy as np
import matplotlib.pyplot as plt

# Load the image in grayscale
image = cv2.imread('morfo.png', 0)  # Load as grayscale

# Define the kernel
kernel = np.ones((5,5), np.uint8)

# Apply Erosion
erosion = cv2.erode(image, kernel, iterations=1)

# Apply Dilation
dilation = cv2.dilate(image, kernel, iterations=1)

# Display the images
plt.subplot(131), plt.imshow(image, cmap='gray'), plt.title('Original')
plt.subplot(132), plt.imshow(erosion, cmap='gray'), plt.title('Erosion')
plt.subplot(133), plt.imshow(dilation, cmap='gray'), plt.title('Dilation')
plt.show()

# Apply Erosion
erosion1 = cv2.erode(image, np.ones((7,7), np.uint8), iterations=1)
erosion2 = cv2.erode(image, np.ones((13,13), np.uint8), iterations=1)
erosion3 = cv2.erode(image, np.ones((19,19), np.uint8), iterations=1)

# Display the images
plt.subplot(131), plt.imshow(erosion1, cmap='gray'), plt.title('Erosion kernel size (3x3)')
plt.subplot(132), plt.imshow(erosion2, cmap='gray'), plt.title('Erosion kernel size (5x5)')
plt.subplot(133), plt.imshow(erosion3, cmap='gray'), plt.title('Erosion kernel size (7x7)')
plt.show()

# Apply Dilation

dilation1 = cv2.dilate(image,  np.ones((7,7), np.uint8), iterations=1)
dilation2 = cv2.dilate(image,  np.ones((13,13), np.uint8), iterations=1)
dilation3 = cv2.dilate(image,  np.ones((19,19), np.uint8), iterations=1)

# Display the images
plt.subplot(131), plt.imshow(dilation1, cmap='gray'), plt.title('Dilation kernel size (3x3)')
plt.subplot(132), plt.imshow(dilation2, cmap='gray'), plt.title('Dilation kernel size (5x5)')
plt.subplot(133), plt.imshow(dilation3, cmap='gray'), plt.title('Dilation kernel size (7x7)')
plt.show()

"""# **Step 2: Opening and Closing**

"""

# Apply Opening (erosion followed by dilation)
opening = cv2.morphologyEx(image, cv2.MORPH_OPEN, kernel)

# Apply Closing (dilation followed by erosion)
closing = cv2.morphologyEx(image, cv2.MORPH_CLOSE, kernel)

# Display the images
plt.subplot(131), plt.imshow(image, cmap='gray'), plt.title('Original')
plt.subplot(132), plt.imshow(opening, cmap='gray'), plt.title('Opening')
plt.subplot(133), plt.imshow(closing, cmap='gray'), plt.title('Closing')
plt.show()

# Apply Opening (erosion followed by dilation)
opening1 = cv2.morphologyEx(image, cv2.MORPH_OPEN,  np.ones((5,5), np.uint8))
opening2 = cv2.morphologyEx(image, cv2.MORPH_OPEN,  np.ones((17,17), np.uint8))
opening3 = cv2.morphologyEx(image, cv2.MORPH_OPEN,  np.ones((37,37), np.uint8))

# Display the images
plt.subplot(131), plt.imshow(opening1, cmap='gray'), plt.title('Original')
plt.subplot(132), plt.imshow(opening2, cmap='gray'), plt.title('Opening kernel size (7x7) matris')
plt.subplot(133), plt.imshow(opening3, cmap='gray'), plt.title('Opening kernel sie (9x9)')
plt.show()

"""function opening maths"""

# Apply Opening (erosion followed by dilation)

# Define the kernel
kernel = np.ones((17,17), np.uint8)

erosion = cv2.erode(image, kernel, iterations=1)
dilation = cv2.dilate(erosion, kernel, iterations=1)
######### erosion + dilation
opening = cv2.morphologyEx(image, cv2.MORPH_OPEN, kernel)

# Display the images
plt.subplot(131), plt.imshow(erosion, cmap='gray'), plt.title('Erosion')
plt.subplot(132), plt.imshow(dilation, cmap='gray'), plt.title('Dilation')
plt.subplot(133), plt.imshow(opening, cmap='gray'), plt.title('erosion+dilation = opening')

plt.show()

# Apply Closing (dilation followed by erosion)

# Define the kernel
kernel = np.ones((17,17), np.uint8)


dilation = cv2.dilate(image, kernel, iterations=1)
erosion = cv2.erode(dilation, kernel, iterations=1)
######### dilation +erosion
opening = cv2.morphologyEx(image, cv2.MORPH_OPEN, kernel)

# Display the images
plt.subplot(131), plt.imshow(dilation, cmap='gray'), plt.title('Dilation')
plt.subplot(132), plt.imshow(erosion, cmap='gray'), plt.title('Erosion')
plt.subplot(133), plt.imshow(opening, cmap='gray'), plt.title('dilation +erosion = closing')

plt.show()





"""# **Step 3: Gradient and Top Hat**"""

# Apply Gradient (dilation - erosion)
gradient = cv2.morphologyEx(image, cv2.MORPH_GRADIENT, kernel)

# Apply Top Hat (original image - opening)
tophat = cv2.morphologyEx(image, cv2.MORPH_TOPHAT, kernel)

# Display the images
plt.subplot(121), plt.imshow(gradient, cmap='gray'), plt.title('Gradient')
plt.subplot(122), plt.imshow(tophat, cmap='gray'), plt.title('Top Hat')
plt.show()

"""# **Step 4: Black Hat**"""

# Apply Black Hat (closing - original image)
blackhat = cv2.morphologyEx(image, cv2.MORPH_BLACKHAT, kernel)

# Display the image
plt.imshow(blackhat, cmap='gray'), plt.title('Black Hat')
plt.show()